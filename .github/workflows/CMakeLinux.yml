name: CMake Linux

on:
  push:
    branches:
      - master
      - dev
  pull_request:
    branches:
      - master

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

  # Use a bash shell so we can use the same syntax for environment variable
  # access regardless of the host operating system
defaults:
  run:
    shell: bash

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    name: ${{ matrix.platform.name }}
    runs-on: ${{ matrix.platform.os }}

    strategy:
      fail-fast: false
      matrix:
        platform:
          - { name: Linux GCC,      os: ubuntu-latest }
          - { name: Linux Clang,    os: ubuntu-latest, flags: -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ }

    steps:
      - uses: actions/checkout@v2

      - name: Configure CMake
        run: cmake -S . -B ./build -DCMAKE_BUILD_TYPE:STRING=$BUILD_TYPE

      - name: Build Linux
        working-directory: ./build
        # Execute the build.  You can specify a specific target with "--target <NAME>"
        run: sudo cmake --build . --config $BUILD_TYPE --target install
